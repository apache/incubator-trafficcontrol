{
	hypnotoad => {
		listen => [
		        # Traffic Ops is proxied to port 60443 by the traffic_ops_golang process
			'https://[::]:60443?cert=/etc/pki/tls/certs/localhost.crt&key=/etc/pki/tls/private/localhost.key&verify=0x00&ciphers=AES128-GCM-SHA256:HIGH:!RC4:!MD5:!aNULL:!EDH:!ED'
		],
		user     => 'trafops',
		group    => 'trafops',
		heartbeat_timeout => 20,
		pid_file => '/var/run/traffic_ops.pid',
		workers  => 12,     # Number of workers to run in parallel. Start with a small number.  Increase as need arises.
	},
	traffic_ops_golang_port => '443',
	traffic_ops_golang_proxy_timeout => 60,
	traffic_ops_golang_read_timeout => 60,
	traffic_ops_golang_read_header_timeout => 60,
	traffic_ops_golang_write_timeout => 60,
	traffic_ops_golang_idle_timeout => 60,
	cors => {
		access_control_allow_origin => '*'
	},
	to => {
		base_url               => 'http://localhost:3000', # this is where traffic ops app resides
		email_from             => 'no-reply@traffic-ops-domain.com', # traffic ops email address
		no_account_found_msg   => 'A Traffic Ops user account is required for access. Please contact your Traffic Ops user administrator.' # message to display if no TO account is found in tm_user
	},
	portal => {
		base_url			=> 'http://localhost:8080/!#/',                # this is where the traffic portal resides (a javascript client that consumes the TO API). Trailing slash is important!
		email_from			=> 'no-reply@traffic-portal-domain.com',       # traffic portal email address
		pass_reset_path		=> 'user',       							   # path where user is sent to reset password. Leverages portal.base_url so you end up with http://localhost:8080/!#/path
		user_register_path	=> 'user'       							   # path where user is sent to complete user registration. Leverages portal.base_url so you end up with http://localhost:8080/!#/path
	},

	# 1st secret is used to generate new signatures. Older one kept around for existing signed cookies.
	#  Remove old one(s) when ready to invalidate old cookies.
	secrets => [ 'mONKEYDOmONKEYSEE.' ],
	geniso  => {
		iso_root_path => '/opt/traffic_ops/app/public',          # the location where the iso files will be written
	},
	inactivity_timeout => 60
};
